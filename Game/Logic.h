class Logic
{
public:
    // Конструктор Logic, который инициализирует доску и конфигурацию.
    Logic(Board* board, Config* config);

    // Вектор для хранения всех возможных ходов для текущей позиции.
    vector<move_pos> turns;

    // Флаг, указывающий, есть ли побеждения для текущего игрока.
    bool have_beats;

    // Максимальная глубина поиска для алгоритма.
    int Max_depth;

private:
    // Генератор случайных чисел для перемешивания ходов.
    default_random_engine rand_eng;

    // Режим оценки для бота (например, количество и потенциальные ходы).
    string scoring_mode;

    // Опции оптимизации для алгоритма (например, уровень оптимизации).
    string optimization;

    // Вектор, хранящий следующие ходы для бота.
    vector<move_pos> next_move;

    // Вектор, хранящий состояния следующих ходов.
    vector<int> next_best_state;

    // Указатель на объект доски, который содержит текущее состояние игры.
    Board* board;

    // Указатель на объект конфигурации, содержащий настройки игры.
    Config* config;
};
